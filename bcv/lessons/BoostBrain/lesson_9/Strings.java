package com.bcv.lessons.BoostBrain.lesson_9;
/*
Кодировки.
1. Компьютер умеет оперировать только байтовыми последовательностями. 
2. Чтобы отобразить символ нужно его изображение и байтовая последовательность, которая сопоставляется с символом.
3. Байтовая последовательность, соответствующая символу называется кодом символа.
4. Набор кодов символов называется кодировкой.
5. В целях достижения совместимости в 1991 был образован "Консорциум Юникода”, который разработал стандарт кодировки Unicj
6. В Java используется кодировка UTF-16.

Класс для работы со строками
1. Для работы со строками в Java есть встроенный класс String.
2. В тексте программы строки представляются последовательностями символов в двойных кавычках, например "Hello, world!".
3. ВАЖНО! Нельзя сравнивать строки оператором ==. Надо использовать метод с именем equals.
4. Класс String не является ссылочным.

Типичные операции над строками.
1. Для определения длины строки используется метод length().
2. Для объединения строк можно использовать метод concat(String str) или оператор +.
3. Для замены всех вхождений символа на другой символ используется метод replace(char oldChar, char newChar).
4. Для выделения подстроки используется метод substring(int beginlndex, int endlndex).
5. Для разделения строки на слова между разделителем используется метод split(String regex).
*/
public class Strings {
    public static void main(String[] args) {
	// создаем объект типа String и инициализируем его значением Hello World
	String string = "Hello world";
	// Получаем длину строки с помощью операции length()
	System.out.println("Количество символов в строке " + string.length());

	// Конкотинация или объединение строк. Создаем второй экземпляр который состоит из первой строки и еще World hello
	String string2 = string + " World hello";
	System.out.println("Объединяем строки " + string2);
	
	// замена всех вхождений одного символа на другой символ. Создаем 3 экземпляр который равняется втрому экземпляру в котором с помощью операции .replace заменяем символы o на u
	String string3 = string2.replace('o', 'u');
	System.out.println("Замена символов o на u " + string3);

	// выделение подстроки.Создаем новый экзепляр который равняется 3 строке из которой мы выделяем подстроку методом .substring (начало индекса, конец индекса)
	String substring = string3.substring(0, 6);
	System.out.println("Выделение подстроки " + substring);
	
	//разделение строки на отдельные слова. Создаем массив строк и заполняем его операцией .split ("указываем разделитель").
	//Т.е. в массив Stirng будут положены все слова, которые разделены пробелами
	String[] strings = string.split(" ");
	//для вывода массива необходим цикл, который пробегаться от 0 до длины массива
	for (int i = 0; i < strings.length; i++) {
	    System.out.println("Разделение строки на слова " +strings[i]);
	}
    }
}

/*
Количество символов в строке 11
Объединяем строки Hello world World hello
Замена символов o на u Hellu wurld Wurld hellu
Выделение подстроки Hellu 
Разделение строки на слова Hello
Разделение строки на слова world
*/

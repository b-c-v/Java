package com.bcv.lessons.BoostBrain.lesson_14;

/*1. Вложенный класс (neted class) - это класс, определение которого полностью находится внтури определнения другого класса
 *2. Вложенные классы делятся на две категориии - статитческие вложенные классы (помечаются словом static) и нестатические классы, которые также называются внутренними
 *3. Экземпляры статических вложенных классов создаются сами по себе (т.е. командой new имя класса), но объекты нестатических создаются в привязке к экземпляру класса-оболочки (экземпляр класса-оболочки ставим . после пишем new название нестатического вложенного класса) 
 
 Анонимные классы
 1. Анонимный класс - это класс, который создан на основе интрефейса или класса, в том числе абстрактного, но не обычным наследованием (т.е. с применением ключевых слов extends, implements), а путем непосредственного определения в том месте, где происходит создание экземпляра (т.е. в  том месте где пишем new имя какого-либо интерфейса, прямо в этом месте мы можем написать определение класса его поля, методы и т.д.)
 2. Поскольку анонимный класс не имеет имени до компиляции, то создать экземпляр анонимного класса за пределами того места, где он определен, обычными средствами невозможно.
 3. Анонимный класс обязан определить все методы, которые не определены в том классе или интерфейсе, на основе которого создан анонимный класс (анонимный класс должен быть всегда полным т.е. в нем не может быть абстрактных или неопределенных методов)
 
 Доступ к переменным и методам
 1. Все вложенные классы имеют доступ к полям и методам класса оболочки, даже если они приватные или защищенные (т.е. помечены ключевыми словами private или protected)
 2. Экземпляры статических вложенных классов получают доступ к статическим методам и переменным
 3. Зкзепляры нестатических вложенных классов получают доступ ко всем полям и методам того экземпляра класса-оболочки, на основе которого они созданы
 4. Экземпляры, которые определены внутри методов (обычно анонимные классы), могут получить доступ к переменным определенным в методе, при условии, что эти переменные помечены ключевым словом final (т.е. являются неизменяемыми константами)
  **/
public class NestedClasses {

    /*
     * public static void main(String[] args) { //создаем банкира через new. Для
     * вложенных классов полное имя класса пишется сначала имя класса верхнего
     * уровня, а потом через . последующих уровней Bank.Banker banker = new
     * Bank.Banker(); //банкир создает банк Bank bank = banker.createBank(); } }
     */

    // ЧАСТЬ 2
    public static void main(String[] args) {
	Bank.Banker banker = new Bank.Banker();
	Bank bank = banker.createBank();
	//создаем новый объект Account
	Bank.Account account = bank.new Account("qwe", "Bonya", 100000);
	account.open();
	bank.putMoney("qwe", 1000);
	bank.getMoney("qwe", 500);
	account.close();
    }

}

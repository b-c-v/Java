package lesson_13;

/*1. Интерфейсы похожи на абстрактыне классы, но определяются ключевым словом interface, вместо abstrac class
2. Одно из главных отличий интерфейса от абстрактного класса в том, что в интерфейсе методы только определяются, но не может быть никакой реализации
3. Второе главное отличие - при наследовании родительский класс может быть только один. А родительских интерфейсов сколько угодно
4. Смысл инфтерфейсов в создании иерархии или набора классов,объединенных общим смыслом и набором методов, с различной реализацией 
*/

//создаем интерфейс с методами: получение имени, площади, цвета
/*public interface Shape {
//в интерфейсе не ставять public т.к. все методы по умолчанию являются публичными
    String getName();
    double getSquare();
    String getColor();

}*/

//2 поскольку везде у нас дублируется переменная цвет - логично переделать ее в абстрактный класс
public abstract class Shape {
    //2 определяем переменную цвет
    private String color;

    //2 заполняем метод цвет в конструкторе
    public Shape(String c) {
	color = c;
    }

    public abstract String getName();

    public abstract double getSquare();

    //2 определяем метод getColor который возвращает цвет и удаляем его во всех фигурах. Я закоментировал все
    public String getColor() {
	return color;
    }

}
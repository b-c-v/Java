package com.bcv.lessons.BoostBrain.lesson_15;

/*
 Обобщенные алгоритмы
 1. Обобщенный алгоритм - это алгоритм, который может оперировать разными типами данных без изменения своей структуры.
 2. На типы данных могут быть наложены значимые для алгоритма ограничения - для сортировки нужно уметь сравнивать значения, для хэш-таблицы - вычислять хэш объекта и т.д.
 3. В Java обобщенные алгоритмы реализованы в виде т.н. generics - это классы и методы, которые принимают параметр обобщенного типа.
 
 Обобщенные классы
 1. Для того чтобы сделать класс обобщенным, нужно после его имени вставить конструкцию вида <GENERIC_TYPE> (можно любое слово), GENERIC_TYPE (можно любое слово) будет условным обозначением обобщенного типа.
 2. После того как класс объявлен обобщенным, можно создавать переменные, входные и выходные парамтеры функций с типом GENERIC_TYPE.
 3. Чтобы создать экземпляр обобщенного класса, нужно написать следующую конструкцию - new GenericClass<CONCRETE_TYPE>(), где CONCRETE_TYPE - это контейнерный тип.
  
 Обобщенные методы
 1. Обобщенный метод можно создать вставив перед указанием возвращаемого типа конструкцию вида <GENERIC_TYPE>, где GENERIC_TYPE будет условным обозначением обобщенного типа.
 2. Обобщенный метод может принимать и возвращать значения типа GENERIC_TYPE.
 3. Вызывается обобщенный метод так же, как обычный, но может принимать разные типы данных.
  
 */
public class Generics {
    public static void main(String[] args) {
	// создаем новый лист и указываем тип <String> это значит что в CutromArrayList
	// вместо Т будет подставлен String
	CustomArrayList<String> strings = new CustomArrayList<>();

	for (int i = 0; i < 100; i++) {
	    strings.add("Hello world " + i);
	}
	for (int i = 0; i < strings.getLength(); i++) {
	    System.out.println(strings.get(i));

	}
	function(42);
	function("Hello world");
	function(4.8);

    }

    //
    static <GENERIC_TYPE> void function(GENERIC_TYPE parameter) {
	System.out.println(parameter.toString());

    }
}
